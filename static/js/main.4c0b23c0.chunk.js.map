{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","style","backgroundColor","background","value","Board","i","this","squares","backgrounds","key","items","row","j","push","renderSquare","React","Component","Game","state","history","Array","fill","changed","stepNumber","xIsNext","slice","current","length","calculateWinner","setState","concat","step","status","winner","moves","map","move","desc","Math","ceil","jumpTo","handleClick","line","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c0b23c0.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n    return (\n        <button \n            className=\"square\"\n            onClick={props.onClick}\n            style={{backgroundColor: props.background}}\n        >\n            {props.value}\n        </button>\n    );\n}\n  \nclass Board extends React.Component {\n    renderSquare(i) {\n        return (\n            <Square\n                value={this.props.squares[i]}\n                background={this.props.backgrounds[i]}\n                key={i}\n                onClick={() => this.props.onClick(i)}\n            />\n        );\n    }\n  \n    render() {\n        let items = [];\n        for (let i = 0; i < 3; i++) {\n            let row = [];\n            for (let j = 0; j < 3; j++) {\n                row.push(this.renderSquare(3 * i + j));\n            }\n            items.push(<div className=\"board-row\" key={i}>{row}</div>);\n        }\n        return (\n            <div>\n                {items}\n            </div>\n        );\n    }\n}\n  \nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n                backgrounds: Array(9).fill(\"white\"),\n                changed: null\n            }],\n            stepNumber: 0,\n            xIsNext: true\n        };\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) return;\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n        this.setState({\n            history: history.concat([{\n                squares: squares,\n                backgrounds: current.backgrounds,\n                changed: i\n            }]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext\n        });\n    }\n\n    jumpTo(step) {\n        this.setState({\n            history: this.state.history,\n            stepNumber: step,\n            xIsNext: (step % 2) === 0\n        });\n    }\n\n    render() {\n        const history = this.state.history;\n        let current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        const moves = history.map((step, move) => {\n            let desc;\n            if (move) {\n                desc = `Go to move #${move} (${step.squares[step.changed]} at position [${Math.ceil((step.changed + 1) / 3)}, ${step.changed % 3 + 1}])`;\n                desc = move === this.state.stepNumber ? <strong>{desc}</strong> : desc;\n            } else {\n                desc = `Go to game start`;\n            }\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\n                </li>\n            );\n        });\n        \n        let status;\n        if (winner) {\n            status = `${winner[0]} is the winner!`;\n            let backgrounds = current.backgrounds.slice();\n            for (let i of winner.slice(1)) backgrounds[i] = \"lightgreen\";\n            current.backgrounds = backgrounds;\n        } else if (this.state.stepNumber === 9) {\n            status = `Draw!`;\n        } else {\n            status = `It's ${this.state.xIsNext ? \"X\" : \"O\"}'s turn!`;\n        }\n\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board\n                        squares={current.squares}\n                        backgrounds={current.backgrounds}\n                        onClick={(i) => this.handleClick(i)}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n  \n// ========================================\n  \nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2], [3, 4, 5], [6, 7, 8],\n        [0, 3, 6], [1, 4, 7], [2, 5, 8],\n        [0, 4, 8], [2, 4, 6]\n    ];\n    for (let line of lines) {\n        const [a, b, c] = line;\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return [squares[a], a, b, c];\n        }\n    }\n    return null;\n}\n  "],"sourceRoot":""}